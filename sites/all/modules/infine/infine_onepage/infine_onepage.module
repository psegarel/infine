<?php

require_once 'infine_onepage.theme.inc';
require_once 'admin/infine_onepage.container.inc';
require_once 'admin/infine_onepage.page.inc';
require_once 'admin/infine_onepage.row.inc';

/**
 * Implements hook_menu()
 * @return array
 */
function infine_onepage_menu() {
  $items = array();

  $items['onepage/%'] = array(
    'title' => 'none',
    'page callback' => 'infine_onepage_page',
    'page arguments' => array(1),
    'access arguments' => array('access content'),
  );

  $items['admin/structure/onepage'] = array(
    'title' => 'List Onepage',
    'page callback' => 'infine_onepage_page_list',
    'page arguments' => array(),
    'access arguments' => array('create onepage'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'infine_onepage.admin.inc',
  );

  $items['admin/structure/onepage/%infine_onepage/edit'] = array(
    'title' => 'Edit Onepage',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('infine_onepage_form_onepage', 3),
    'access arguments' => array('edit onepage'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'infine_onepage.admin.inc',
  );

  $items['admin/structure/onepage/%infine_onepage/delete'] = array(
    'title' => 'Delete Onepage',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('infine_onepage_form_onepage_delete_confirm', 3),
    'access arguments' => array('delete onepage'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'infine_onepage.admin.inc',
  );

  $items['admin/structure/onepage/add'] = array(
    'title' => 'Add Onepage',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('infine_onepage_form_onepage'),
    'access arguments' => array('create onepage'),
    'type' => MENU_LOCAL_ACTION,
    'file' => 'infine_onepage.admin.inc',
  );

  $items['admin/structure/onepage/sort'] = array(
    'title' => 'Add Onepage',
    'page callback' => 'infine_onepage_sort',
    'page arguments' => array(),
    'access arguments' => array('create onepage'),
    'type' => MENU_CALLBACK,
  );

  $items['admin/structure/onepage/%'] = array(
    'title' => 'Manage onepage',
    'page callback' => 'infine_onepage_page_admin',
    'page arguments' => array(3),
    'access arguments' => array('create onepage'),
    'file' => 'infine_onepage.admin.inc',
  );

  return $items;
}

function infine_onepage_load($id) {
  $page = db_select('infine_onepage', 'io')
    ->fields('io')
    ->condition('id', $id)
    ->execute()->fetch();

  $page->attributes = unserialize($page->attributes);

  return $page;
}

function infine_onepage_form_alter(&$form, &$form_state, $form_id) {
  if ($form_id != 'menu_edit_item') {
    return;
  }

  $form['link_path']['#required'] = FALSE;

  $form['onepage'] = array(
    '#type' => 'fieldset',
    '#title' => t('Onepage navigation'),
  );

  $containers = infine_onepage_get_containers(2);
  $options = array();

  $options[FALSE] = t('Not a onepage link');
  foreach ($containers as $container) {
    if(isset($container->wrapper_attributes['id'])) {
      $options['#' . $container->wrapper_attributes['id']] = $container->name;
    }
  }

  $form['onepage']['navigation_options'] = array(
    '#prefix' => '<div id=onepage-option-wrapper>',
    '#suffix' => '</div>',
    '#title' => t('Containers'),
    '#type' => 'select',
    '#options' => $options,
    '#default_value' => isset($options[$form['link_path']['#default_value']]) ? $form['link_path']['#default_value'] : NULL,
  );

  $form['actions']['submit']['#validate'][] = 'infine_onepage_form_menu_validate';
}

function infine_onepage_menu_link_insert($link) {
  infine_onepage_menu_link_update($link);
}

function infine_onepage_menu_link_update($link) {
  if (strpos($link['link_path'], '#') === 0) {
    db_update('menu_links')
      ->condition('mlid', $link['mlid'])
      ->fields(
        array(
          'router_path' => 'onepage/%'
        )
      )
      ->execute();
  }
}

function infine_onepage_form_menu_validate($form, &$form_state) {

  if ($form_state['values']['navigation_options']) {

    $form_state['values']['link_path'] = $form_state['values']['navigation_options'];
    $form_state['values']['options']['attributes']['name'] = $form_state['values']['navigation_options'];
    return;
  } else if(strpos($form_state['values']['link_path'], '#') === 0) {
    $form_state['values']['options']['attributes']['name'] = $form_state['values']['link_path'];
  }
  else {
    menu_edit_item_validate($form, $form_state);
  }
}

/**
 * @param $page_id
 */
function infine_onepage_page($page_id) {


  return theme('infine_onepage_page', array('page' => $page_id));
}

/**
 * Implements hook_permission
 * @return array
 */
function infine_onepage_permission() {
  return array(
    'create onepage' => array(
      'title' => t('Create onepage'),
    ),
    'edit onepage' => array(
      'title' => t('Edit onepage'),
    ),
    'delete onepage' => array(
      'title' => t('Delete onepage'),
    ),
  );
}


/**
 * @param $form
 * @param $form_state
 * @return mixed
 */
function infine_onepage_form($form, &$form_state) {

  $form['type'] = array(
    '#type' => 'select',
    '#options' => array(
      'node' => t('Node'),
      'block' => t('Block'),
    ),
    '#ajax' => array(
      'callback' => 'infine_onepage_form_ajax',
      'wrapper' => 'onepage-components'
    )
  );

  $form['components'] = array(
    '#type' => 'select',
    '#options' => array(),
    '#prefix' => '<div id=onepage-components>',
    '#suffix' => '</div>',
  );

  if (isset($form_state['values']) && $form_state['values']['type']) {
    switch ($form_state['values']['type']) {
      case 'node':
        $options = db_select('node', 'n')
          ->fields('n', array('nid', 'title'))
          ->execute()->fetchAllKeyed();

        $form['components']['#options'] = $options;
        break;
      case 'block':
        $options = infine_onepage_get_block_info();
        $form['components']['#options'] = $options;
        break;
    }
  }

  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Add'),
    '#submit' => array('infine_onepage_form_submit'),
  );

  return $form;
}

function infine_onepage_get_block_info() {
  $block_infos = module_invoke_all('block_info');
  $options = array();

  foreach ($block_infos as $delta => $block_info) {
    $options[$delta] = $block_info['info'];
  }

  $db_options = db_select('block', 'b')
    ->fields('b', array('delta', 'title'))
    ->groupBy('delta')
    ->execute()->fetchAllKeyed();

  $options = array_merge($db_options, $options);

  module_load_include('inc', 'block', 'block.admin');
  $blocks = _block_rehash('infine');

  $options = array();
  foreach($blocks as $block) {
    $options[$block['bid']] =  $block['info'];
  }



  return $options;
}

function infine_onepage_form_ajax(&$form, &$form_state) {
  $form_state['rebuild'] = TRUE;

  return $form['components'];
}

function infine_onepage_form_validate($form, &$form_state) {

}

function infine_onepage_form_submit($form, &$form_state) {
  $values = $form_state['values'];

  $edit = array(
    'component' => $values['type'],
    'component_id' => $values['components'],
  );

  drupal_write_record('infine_onepage', $edit);
}

/**
 * Loading form
 * @param $form
 * @param $form_state
 */
function infine_onepage_form_ajax_container(&$form, &$form_state) {
  $form_state['rebuild'] = TRUE;
  $form_state['values']['create_new'] = TRUE;

  return $form;
}


/**
 * Implements hook_forms()
 * @param $form_id
 * @param $args
 * @return array
 */
function infine_onepage_forms($form_id, $args) {
  $match = preg_match('/infine_onepage_form_row_(\d+)/', $form_id, $matches);
  $forms = array();

  if ($match) {
    $forms[$matches[0]] = array(
      'callback' => 'infine_onepage_form_row',
    );
  }

  $match = preg_match('/infine_onepage_form_component_(\d+)/', $form_id, $matches);
  $forms = array();

  if ($match) {
    $forms[$matches[0]] = array(
      'callback' => 'infine_onepage_form_component',
    );
  }

  return $forms;
}


/**
 * @return mixed
 */
function infine_onepage_get_all_components() {
  static $infine_components;

  if ($infine_components) {
    return $infine_components;
  }

  $infine_components = db_select('infine_onepage', 'io')
    ->fields('io', array())
    ->orderBy('weight')
    ->execute()->fetchAllAssoc('id');

  return $infine_components;
}


/**
 * @param $page_id
 */
function infine_onepage_get_containers($page_id) {

  $containers = db_select('infine_onepage_container', 'ioc')
    ->fields('ioc', array())
    ->condition('page_id', $page_id)
    ->orderBy('weight')
    ->execute()->fetchAllAssoc('id');


  foreach ($containers as &$container) {
    $attributes = unserialize($container->attributes);
    $container->attributes = $attributes;
    $container->container_attributes = $attributes['container'];

    if (isset($container->container_attributes['class'])) {
      $container->container_attributes['class'] = explode(' ', $container->container_attributes['class']);

      if(!$container->container_attributes['class']) {
        unset($container->container_attributes['class']);
      }
    }

    if(!$container->container_attributes['id']) {
      unset($container->container_attributes['id']);
    }

    if($container->fullwidth) {
      $container->inner_attributes['class'] = array('container-fullwidth');
    } else {
      $container->inner_attributes['class'] = array('container');
    }

    foreach ($container->container_attributes['class'] as $class) {
      if($class) {
        $container->inner_attributes['class'][] = $class . '-inner';
      }
    }


    $container->wrapper_attributes = $attributes['wrapper'];
    if (isset($container->wrapper_attributes['class'])) {
      $container->wrapper_attributes['class'] = explode(' ', $container->wrapper_attributes['class']);
    }
  }

  return $containers;
}

/**
 * @param $container_id
 * @return mixed
 */
function infine_onepage_get_rows($container_id) {
  $rows = db_select('infine_onepage_row', 'ior')
    ->fields('ior', array())
    ->condition('container_id', $container_id)
    ->orderBy('weight')
    ->execute()->fetchAllAssoc('id');

  $container = infine_onepage_container_load($container_id);

  foreach ($rows as &$row) {
    $row->attributes = unserialize($row->attributes);

    if (isset($row->attributes['class']) && is_array($row->attributes['class'])) {
      if(!$container->fullwidth) {
        $row->attributes['class'][] = 'row';
      }
    }
    else {
      if(!$container->fullwidth) {
        $row->attributes['class'] = array('row');
      }
    }
  }

  return $rows;
}

function infine_onepage_container_load($container_id) {
  return db_select('infine_onepage_container', 'ioc')
    ->fields('ioc')
    ->condition('id', $container_id)
    ->execute()->fetch();
}

function infine_onepage_page_load($page_id) {
  return db_select('infine_onepage', 'ioc')
    ->fields('ioc')
    ->condition('id', $page_id)
    ->execute()->fetch();
}

/**
 * @param $row_id
 * @return mixed
 */
function infine_onepage_get_components($row_id) {
  $components = db_select('infine_onepage_component', 'ioc')
    ->fields('ioc', array())
    ->orderBy('weight')
    ->condition('container_id', $row_id)
    ->execute()->fetchAllAssoc('id');

  foreach ($components as &$component) {
    $component->attributes = unserialize($component->attributes);
  }

  return $components;
}


function infine_onepage_get_pages() {
  $pages = db_select('infine_onepage', 'io')
    ->fields('io', array())
    ->execute()->fetchAll();

  return $pages;
}

function infine_onepage_page_list() {
  $pages = infine_onepage_get_pages();
  $header = array(t('Title'), t('Path'), t('Actions'));

  $rows = array();
  foreach ($pages as $page) {
    $links = array(
      l(t('Manage'), 'admin/structure/onepage/' . $page->id),
      l(t('Edit'), 'admin/structure/onepage/' . $page->id . '/edit'),
      l(t('Delete'), 'admin/structure/onepage/' . $page->id . '/delete'),
    );

    $row = array(
      array(
        'data' => $page->title,
      ),
      array(
        'data' => $page->path,
      ),
      array(
        'data' => implode(' | ', $links),
      ),
    );

    $rows[] = $row;
  }

  return theme_table(
    array(
      'header' => $header,
      'rows' => $rows,
      'attributes' => array(),
      'sticky' => FALSE,
      'caption' => NULL,
      'colgroups' => NULL,
      'empty' => t('No pages created'),
    )
  );
}


/**
 * @param $onepage
 */
function infine_onepage_sort() {
  $parameters = $_POST;

  foreach($parameters['sorting'] as $index => $element) {
    $parts = explode('-', $element);
    $type = $parts[1];
    $id = $parts[2];

    switch($type) {
      case 'row':
        db_update('infine_onepage_row')
          ->fields(array(
              'weight' => $index + 1,
            ))
          ->condition('id', $id)
          ->execute();
        break;

      case 'container':
        db_update('infine_onepage_container')
          ->fields(array(
              'weight' => $index + 1,
            ))
          ->condition('id', $id)
          ->execute();

      case 'component':
        db_update('infine_onepage_component')
          ->fields(array(
              'weight' => $index + 1,
            ))
          ->condition('id', $id)
          ->execute();
    }

  }
  exit;
}


function infine_test() {
  infine_onepage_get_block_info();
}

